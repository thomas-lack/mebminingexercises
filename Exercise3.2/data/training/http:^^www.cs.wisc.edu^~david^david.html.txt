===============================================================================
****** David Wood (david@cs.wisc.edu) ******

[http://www.cs.wisc.edu/~pubs/faculty-info/wood.gif]

Associate Professor of Computer Science
and Electrical and Computer Engineering
Department of Computer Sciences
University of Wisconsin - Madison
1210 West Dayton Street
Madison, WI 53706 USA

david@cs.wisc.edu
Phone: 608-263-7463
Secretary: 265-4892 (Julie Fingerson or Thea Sklenar)
Departmental Office: 262-1204
Fax: 608-262-9777
**** Research Interests: ****
    * Computer_architecture, especially memory system design for uniprocessors
      and multiprocessors.
    * Design, implementation, and programming of parallel computers.
    * Operating systems for parallel computers.
    * Performance evaluation tools and techniques, especially for memory system
      analysis.
    * VLSI design, including low power design for portable computers.
**** Research Projects: ****
    * Wisconsin_Wind_Tunnel_(WWT)
    * Memory_System_Performance_Tools_(WARTS)
**** Education: ****
    * Ph.D. University of California, Berkeley, 1990
    * B.S. University of California, Berkeley, 1981
**** Current Graduate Students: ****
    * Babak_Falsafi
    * Steve_Reinhardt
    * Brian_Toonen
**** Recently Graduated Students: ****
    * Rahmat_Hyder (Intel)
    * Alvy_Lebeck (Duke University)
    * Rob_Pfile (Sun Microsystems)
    * Mark_Callaghan (Informix)
**** Courses I Teach: ****
    * Fall 1996: CS/ECE_552_-_Introduction_to_Computer_Architecture
    * CS/ECE_354_-_Machine_Organization_and_Programming
    * CS/ECE_552_-_Introduction_to_Computer_Architecture
    * CS/ECE_752_-_Advanced_Computer_Architecture_I
    * CS/ECE_757_-_Advanced_Computer_Architecture_II
===============================================================================
***** Selected Recent Papers *****
      Decoupled_Hardware_Support_for_Distributed_Shared_Memory Steven K.
      Reinhardt, Robert W. Pfile, and David A. Wood, ACM/IEEE International
      Symposium on Computer Architecture (ISCA), May 1996
      Coherent_Network_Interfaces_for_Fine-Grain_Communication Shubhendu S.
      Mukherjee and Babak Falsafi and Mark D. Hill and David A. Wood, ACM/IEEE
      International Symposium on Computer Architecture (ISCA), May 1996
      Synchronization_Hardware_for_Networks_of_Workstations:_Performance_vs.
      Cost Rahmat S. Hyder and David A. Wood, ACM/IEEE International Conference
      on Supercomputing (ICS), May 1996
      Dynamic_Self-Invalidation:_Reducing_Coherence_Overhead_in_Shared-Memory
      Multiprocessors Alvin R. Lebeck and David A. Wood, ACM/IEEE International
      Symposium on Computer Architecture (ISCA), June 1995
      Active_Memory:_A_New_Abstraction_For_Memory_System_Simulation Alvin R.
      Lebeck and David A. Wood, ACM SIGMETRICS May 1995
      Accuracy_vs._Performance_in_Parallel_Simulation_of_Interconnection
      Networks,
      Douglas C. Burger and David A. Wood.
      In the proceedings of the 9th International Parallel Processing
      Symposium, April, 1995.
      Application-Specific_Protocols_for_User-Level_Shared_Memory, Babak
      Falsafi, Alvin Lebeck, Steven Reinhardt, Ioannis Schoinas, Mark Hill,
      James Larus, Anne Rogers, and David Wood, In Proceedings of
      Supercomputing '94.
      Fine-grain_Access_Control_for_Distributed_Shared_Memory, Ioannis
      Schoinas, Babak Falsafi, Alvin Lebeck, Steven Reinhardt, James Larus, and
      David Wood, Proceedings of ASPLOS VI.
      Tempest_and_Typhoon:_User-Level_Shared_Memory, Steven Reinhardt, James
      Larus, and David Wood, Proceedings of Int'l Symposium on Computer
      Architecture, 1994.
      Cache_Profiling_and_the_SPEC_Benchmarks:_A_Case_Study, Alvin R. Lebeck
      and David A. Wood, pages 15-26, IEEE COMPUTER, October 1994
      Cooperative_Shared_Memory:_Software_and_Hardware_for_Scalable
      Multiprocessors, Mark D. Hill, James R. Larus, Steven K. Reinhardt, David
      A. Wood, ACM Transactions on Computer Systems (TOCS), November 1993.
      The_Wisconsin_Wind_Tunnel_Project:_An_Annotated_Bibliography, Mark D.
      Hill, James R. Larus, David A. Wood, Computer Architecture News, v. 22,
      n. 5, December 1994. On-line version revised frequently.
      Wisconsin_Architectural_Research_Tool_Set_(WARTS), Mark D. Hill, James R.
      Larus, Alvin R. Lebeck, Madhusudhan Talluri, David A. Wood, Computer
      Architecture News (CAN), August 1993.
===============================================================================
===============================================================================
***** Research Summary *****
My main research goals lie in developing cost-effective computer architectures
that take advantage of rapidly changing technologies. My research program has
two major thrusts:
    * evaluating the performance, feasibility, and correctness of new
      architectures, and
    * developing new tools and techniques to facilitate this evaluation.
Currently, this research focusses on the following three areas:
    * multi-paradigm multiprocessors, which efficiently integrate shared-
      memory, message-passing, and hybrid programming paradigms,
    * a virtual prototyping system, which exploits the similarites of an
      existing parallel machine to simulate a hypothetical parallel machine,
    * and, techniques for understanding and tuning program performance.
Recent results include developing a new interface---called Tempest---between
user-level protocol handlers and system-supplied mechanisms. Tempest provides
the mechanisms that allow programmers, compilers, and program libraries to
implement and use message passing, transparent shared memory, and hybrid
combinations of the two. Tempest mechanisms are low-overhead messages, bulk
data transfer, virtual memory management, and fine-grain access control. The
most novel mechanism---fine-grain access control---allows user software to tag
blocks (e.g., 32 bytes) as read-write, read-only, or invalid, so the local
memory can be used to transparently cache remote data.

We are exploring alternative ways to support this interface. The first---called
Typhoon---is a proposed hardware platform that implements the Tempest
mechanisms with a fully-programmable, user-level processor in the network
interface. A reverse-translation table (RTLB) invokes the network processor
when it detects a fine-grain access fault. We have simulated Typhoon on the
Wisconsin Wind Tunnel and found that a transparent shared-memory protocol
running on Typhoon performs comparably +/- 30% to an all-hardware Dir{N}NB
cache-coherence protocol for five shared-memory programs.

We have also developed a new memory system simulation method that optimizes the
common case---cache hits---significantly reducing simulation time. Fast-Cache
tightly integrates reference generation and simulation by providing the
abstraction of tagged memory blocks: each reference invokes a user-specified
function depending upon the reference type and memory block state. The
simulator controls how references are processed by manipulating memory block
states, specifying a special NULL function for no action cases. Fast-Cache
implements this abstraction by using binary-rewriting to perform a table lookup
before each memory reference. On a SPARCStation 10, Fast-Cache simulation times
are two to three times faster than a conventional trace-driven simulator that
calls a procedure on each memory reference; simulation times are only three to
six times slower than the original, un-instrumented program. We are also
investigating using Fast-Cache's binary rewriting techniques to support the
Tempest interface on existing hardware platforms.
===============================================================================
     Last Updated: July 11, 1996
===============================================================================
