
****** FLAME clustering ******

From Wikipedia, the free encyclopedia


Jump to: navigation, search

                        A major contributor to this article appears to have a
                        close_connection with its subject. It may require
[Unbalanced scales.svg] cleanup to comply with Wikipedia's content policies,
                        particularly neutral_point_of_view. Please discuss
                        further on the talk_page. (August 2010)
Fuzzy clustering by Local Approximation of MEmberships (FLAME) is a data
clustering algorithm that defines clusters in the dense parts of a dataset and
performs cluster assignment solely based on the neighborhood relationships
among objects. The key feature of this algorithm is that, the neighborhood
relationships among neighboring objects in the feature space are used to
constrain the memberships of neighboring objects in the fuzzy membership space.
***** Contents *****
    * 1_Description_of_the_FLAME_algorithm
    * 2_The_optimization_problem_in_FLAME
    * 3_A_simple_illustration_on_a_2-Dimension_testing_dataset
    * 4_See_also
    * 5_External_links
***** [edit] Description of the FLAME algorithm *****
The FLAME algorithm is mainly divided into three steps:
   1. Extraction of the structure information from the dataset:
         1. Construct a neighborhood graph to connect each object to its K-
            Nearest Neighbors (KNN);
         2. Estimate a density for each object based on its proximities to its
            KNN;
         3. Objects are classified into 3 types:
               1. Cluster Supporting Object (CSO): object with density higher
                  than all its neighbors;
               2. Cluster Outliers: object with density lower than all its
                  neighbors, and lower than a predefined threshold;
               3. the rest.
   2. Local/Neighborhood approximation of fuzzy memberships:
         1. Initialization of fuzzy membership:
               1. Each CSO is assigned with fixed and full membership to itself
                  to represent one cluster;
               2. All outliers are assigned with fixed and full membership to
                  the outlier group;
               3. The rest are assigned with equal memberships to all clusters
                  and the outlier group;
         2. Then the fuzzy memberships of all type 3 objects are updated by a
            converging iterative procedure called Local/Neighborhood
            Approximation of Fuzzy Memberships, in which the fuzzy membership
            of each object is updated by a linear combination of the fuzzy
            memberships of its nearest neighbors.
   3. Cluster construction from fuzzy memberships in two possible ways:
         1. One-to-one object-cluster assignment, to assign each object to the
            cluster in which it has the highest membership;
         2. One-to-multiple object-clusters assignment, to assign each object
            to the cluster in which it has a membership higher than a
            threshold.
***** [edit] The optimization problem in FLAME *****
The Local/Neighborhood Approximation of Fuzzy Memberships is a procedure to
minimize the Local/Neighborhood Approximation Error (LAE/NAE) defined as the
following:
            [
            E(\{\boldsymbol{p}\})=\sum_{\boldsymbol{x}\in\boldsymbol{X}}
            \bigg\| \boldsymbol{p(x)}-\sum_{ \boldsymbol{y \in \mathcal{N}(x)}
            } w_{\boldsymbol{xy}} \boldsymbol{p(y)} \bigg\|^2
            ]
where [\boldsymbol{X}] is the set of all type 3 objects, [\boldsymbol{p(x)}] is
the fuzzy membership vector of object [\boldsymbol{x}], [\mathcal{N}(x)] is the
set of nearest neighbors of [\boldsymbol{x}], and [w_{\boldsymbol{xy}}] with
[\sum_{\boldsymbol{y\in \mathcal{N}(x)}}w_{\boldsymbol{xy}}=1] are the
coefficients reflecting the relative proximities of the nearest neighbors.
The NAE can be minimized by solving the following linear equations with unique
solution which is the unique global minimum of NAE with value zero:
            [
            p_k(\boldsymbol{x})-\sum_{\boldsymbol{y\in \mathcal{N}(x)}} w_
            { \boldsymbol{xy} } p_k(\boldsymbol{y}) = 0, \quad\forall
            {\boldsymbol{x}\in \boldsymbol{X} },\quad k=1,...,M
            ]
where M is the number of CSOs plus one (for the outlier group). The following
iterative procedure can be used to solve these linear equations:
            [
            {\boldsymbol{p}^{t+1}(\boldsymbol{x})} = \sum_{ \boldsymbol{y\in
            \mathcal{N}(x)} }
            w_{\boldsymbol{xy}} {\boldsymbol{p}^t (\boldsymbol{y})}
            ]
***** [edit] A simple illustration on a 2-Dimension testing dataset *****
[FLAME_Demo.png]
***** [edit] See also *****
    * Data_clustering
    * Fuzzy_clustering
***** [edit] External links *****
    * BMC_Bioinformatics_(2007):_FLAME,_a_novel_fuzzy_clustering_method_for_the
      analysis_of_DNA_microarray_data
    * FLAME_source_codes_in_C_released_under_FreeBSD-like_license_on_GoogleCode

Retrieved from "http://en.wikipedia.org/wiki/FLAME_clustering"

Categories: Data_clustering_algorithms | Statistical_algorithms | Data_mining |
Machine_learning
Hidden categories: Wikipedia_articles_with_possible_conflicts_of_interest_from
August_2010

