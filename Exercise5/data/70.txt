
****** General Architecture for Text Engineering ******

From Wikipedia, the free encyclopedia


Jump to: navigation, search

                                   GATE
[GATE5_main_window.png]
GATE Developer v5 main window
Developer(s)     GATE_research_team, Dept._Computer_Science,_University_of
                 Sheffield
Initial release  1995; 16 years ago (1995)
Stable_release   6.1  (May 6, 2011; 22 days ago (2011-05-06)) [+/â]
Preview_release  6.2  (May 28 (Nightly builds released everyday)) [+/â]
Written_in       Java
Operating_system Cross-platform
Available_in     English
Type             Text_mining Information_Extraction
License          LGPL
Website          gate.ac.uk
General Architecture for Text Engineering or GATE is a Java suite of tools
originally developed at the University_of_Sheffield beginning in 1995 and now
used worldwide by a wide community of scientists, companies, teachers and
students for all sorts of natural_language_processing tasks, including
information_extraction in many languages.
GATE has been compared to NLTK, R and RapidMiner.[1] As well as being widely
used in its own right, it forms the basis of the KIM semantic platform.[2]
GATE community and research has been involved in several European research
projects including TAO, SEKT, NeOn, Media-Campaign, Musing, Service-Finder,
LIRICS and KnowledgeWeb, as well as many other projects.
As of May 28, 2011, 881 people are on the gate-users mailing list at
SourceForge.net, and 111,932 downloads from SourceForge are recorded since the
project moved to SourceForge in 2005.[3] The paper "GATE: A Framework and
Graphical Development Environment for Robust NLP Tools and Applications"[4] has
received over 800 citations in the seven years since publication (according to
Google Scholar). Books covering the use of GATE, in addition to the GATE User
Guide,[5] include "Building Search Applications: Lucene, LingPipe, and Gate",
by Manu Konchady,[6] and "Introduction to Linguistic Annotation and Text
Analytics", by Graham Wilcock.[7]
***** Contents *****
    * 1_Features
    * 2_GATE_Developer
    * 3_GATE_MÃ­mir
    * 4_See_also
    * 5_References
***** [edit] Features *****
GATE includes an information_extraction system called ANNIE (A Nearly-New
Information Extraction System) which is a set of modules comprising a
tokenizer, a gazetteer, a sentence_splitter, a part_of_speech_tagger, a named
entities transducer and a coreference tagger. ANNIE can be used as-is to
provide basic information_extraction functionality, or provide a starting point
for more specific tasks.
Languages currently handled in GATE include English, Spanish, Chinese, Arabic,
Bulgarian, French, German, Hindi, Italian, Cebuano, Romanian, Russian.
Plugins are included for machine_learning with Weka, RASP, MAXENT, SVM Light,
as well as a fast LibSVM integration and an in-house perceptron implementation,
for managing Ontologies like WordNet, for querying search_engines like Google
or Yahoo, for part_of_speech_tagging with Brill or TreeTagger, and many more.
GATE accepts input in various formats, such as TXT, HTML, XML, Doc, PDF
documents, and Java_Serial, PostgreSQL, Lucene, Oracle Databases with help of
RDBMS storage over JDBC.
JAPE transducers are used within GATE to manipulate annotations on text.
Documentation is provided in the GATE User Guide.[8] A tutorial has also been
written by Press Association Images.[9]
***** [edit] GATE Developer *****
GATE 5 main window.
The screenshot shows the document viewer used to display a document and its
annotations. In pink are <A> hyperlink annotations from an HTML file. The right
list is the annotation sets list, and the bottom table is the annotation list.
In the center is the annotation editor window.
***** [edit] GATE MÃ­mir *****
GATE based applications often generate vast quantities of information
including; natural language text, semantic annotations, and ontological
information. Sometimes the data itself is the end product of an application but
often the information would be more useful if it could be efficiently searched.
GATE Mimir provides support for indexing and searching the linguistic and
semantic information generated by such applications and allows for querying the
information using arbitrary combinations of text, structural information, and
SPARQL.
***** [edit] See also *****
[Portal-puzzle.svg] Free_software_portal
    * Unstructured_Information_Management_Architecture (UIMA)
    * Natural_language_processing_toolkits
***** [edit] References *****
   1. ^ "Open_Source_Text_Analytics"_web_article_by_Seth_Grimes
   2. ^ "KIM_â_a_semantic_platform_for_information_extraction_and_retrieval",
      by_Popov_et_al_(Natural_Language_Engineering_(2004),_10:375-392)
   3. ^ GATE_project_page_on_SourceForge
   4. ^ "GATE:_A_Framework_and_Graphical_Development_Environment_for_Robust_NLP
      Tools_and_Applications",_by_Cunningham_H.,_Maynard_D.,_Bontcheva_K._and
      Tablan_V._(In_proc._of_the_40th_Anniversary_Meeting_of_the_Association
      for_Computational_Linguistics,_2002)
   5. ^ GATE_User_Guide
   6. ^ Konchady, Manu. Building_Search_Applications:_Lucene,_LingPipe,_and
      Gate. Mustru Publishing. 2008.
   7. ^ "Introduction_to_Linguistic_Annotation_and_Text_Analytics",_by_Graham
      Wilcock
   8. ^ JAPE_chapter_in_the_GATE_User_Guide
   9. ^ A_JAPE_tutorial_from_Press_Association_Images,_UK

Retrieved from "http://en.wikipedia.org/wiki/
General_Architecture_for_Text_Engineering"

Categories: Data_mining | Free_development_toolkits_and_libraries | Free
science_software | Free_software_programmed_in_Java | Open-source_integrated
development_environments | Free_cross-platform_software | Knowledge
representation | Machine_learning | Natural_language_processing_toolkits |
Ontology_(information_science) | Ontology_editors

